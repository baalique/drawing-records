[tool.poetry]
name = "drawing-records"
version = "0.1.0"
description = ""
authors = ["baalique <baalique@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.73.0"
uvicorn = "^0.17.4"
factory-boy = "^3.2.1"
pytest = "^7.0.1"
coverage = "^6.3.1"
pytest-factoryboy = "^2.1.0"
pytest-mock = "^3.7.0"
python-dotenv = "^0.19.2"
pytest-asyncio = "^0.18.1"
pytest-cov = "^3.0.0"
requests = "^2.27.1"
flakeheaven = "^0.11.1"
flake8-bugbear = "^22.1.11"
flake8-pytest-style = "^1.6.0"
flake8-absolute-import = "^1.0.0"
flake8-logging-format = "^0.6.0"
flake8-bandit = "^2.1.2"
flake8-comprehensions = "^3.8.0"
flake8-eradicate = "^1.2.0"
flake8-black = "^0.2.4"
isort = "^5.10.1"
flake8-isort = "^4.1.1"
flake8-annotations = "^2.7.0"
mypy = "^0.931"
SQLAlchemy = {version = "1.4.31", extras = ["mypy"]}
asyncpg = "^0.25.0"
sqlalchemy-stubs = "^0.4"

[tool.poetry.dev-dependencies]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.flakeheaven]
count = true
exclude = [
    "__pycache__",
    ".git",
    ".mypy_cache",
    ".pytest_cache"
]
format = "colored"
max_line_length = 90
show_source = true

[tool.flakeheaven.plugins]
flake8-absolute-import = ["+*"]
flake8-annotations = [
    "+*",
    "-ANN002", # ANN002 Missing type annotation for *args
    "-ANN003", # ANN003 Missing type annotation for **kwargs
    "-ANN101", # ANN101 Missing type annotation for self in method
    "-ANN204", # ANN204 Missing return type annotation for special method
]
flake8-bandit = ["+*"]
flake8-black = ["+*"]
flake8-bugbear = ["+*"]
flake8-comprehensions = ["+*"]
flake8-eradicate = ["+*"]
flake8-isort = ["+*"]
flake8-logging-format = ["+*"]
flake8-pytest-style = ["+*"]
mccabe = ["+*"]
pycodestyle = [
    "+*",
    "-E731", # E731 do not assign a lambda expression, use a def
    "-W503", # W503 line break before binary operator
]
pyflakes = ["+*"]
pylint = ["+*"]

[tool.flakeheaven.exceptions."tests/"]
flake8-annotations = ["-*"]
flake8-bandit = [
    "-S101", # S101 assert used
]
flake8-pytest-style = [
    "-PT023", # PT023 use @pytest.mark.{mark_name}{expected_parens} over @pytest.mark.{mark_name}{actual_parens}
]

[tool.flakeheaven.exceptions."app/api/"]
flake8-bugbear = [
    "-B008", # B008 Do not perform function calls in argument defaults.
]

[tool.mypy]
plugins = ["sqlmypy"]